rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isBusinessOwner(businessId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "business_owner" &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.businessId == businessId;
    }
    
    function isEmployee(businessId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "employee" &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.businessId == businessId;
    }
    
    function isCustomer(businessId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "customer" &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.businessId == businessId;
    }

    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow create: if true;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    // Customers collection
    match /customers/{customerId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == customerId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "business_owner" ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
      );
      allow write: if isAuthenticated() && (
        request.auth.uid == customerId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "business_owner"
      );
    }

    // Businesses collection
    match /businesses/{businessId} {
      // Public read for business landing pages
      allow read: if true;
      // Business owner and customers can update their business
      allow write: if isBusinessOwner(businessId) || 
                  (isCustomer(businessId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['customers']));
      
      // Business subcollections
      match /customers/{customerId} {
        allow read: if isBusinessOwner(businessId) || 
                   isEmployee(businessId) || 
                   (isCustomer(businessId) && request.auth.uid == customerId) ||
                   (isAuthenticated() && exists(/databases/$(database)/documents/businesses/$(businessId)/customers/$(request.auth.uid)));
        allow write: if isBusinessOwner(businessId) ||
                    (isCustomer(businessId) && request.auth.uid == customerId);
      }
      
      match /employees/{employeeId} {
        allow read: if isBusinessOwner(businessId) || 
                   (isEmployee(businessId) && request.auth.uid == employeeId);
        allow write: if isBusinessOwner(businessId);
      }
      
      match /routes/{routeId} {
        allow read: if isBusinessOwner(businessId) || 
                   isEmployee(businessId);
        allow write: if isBusinessOwner(businessId) || 
                    (isEmployee(businessId) && resource.data.assignedTech.id == request.auth.uid);
      }
      
      match /vehicles/{vehicleId} {
        allow read: if isBusinessOwner(businessId) || 
                   isEmployee(businessId);
        allow write: if isBusinessOwner(businessId);
      }
      
      match /inventory/{itemId} {
        allow read: if isBusinessOwner(businessId) || 
                   isEmployee(businessId);
        allow write: if isBusinessOwner(businessId);
      }
      
      match /appointments/{appointmentId} {
        allow read: if isBusinessOwner(businessId) || 
                   isEmployee(businessId) || 
                   (isCustomer(businessId) && resource.data.customerId == request.auth.uid);
        allow write: if isBusinessOwner(businessId) || 
                    isEmployee(businessId);
      }

      match /inventory-counts/{countId} {
        allow read: if isBusinessOwner(businessId) || 
                   isEmployee(businessId);
        allow write: if isBusinessOwner(businessId) || 
                    isEmployee(businessId);
      }

      match /landing_content/{contentId} {
        allow read: if true;
        allow write: if isBusinessOwner(businessId);
        allow update: if isBusinessOwner(businessId) && 
                     request.resource.data.keys().hasAll(['default', 'custom', 'lastModified']);
      }
    }

    // Analytics collection
    match /analytics/{document=**} {
      allow read: if isAdmin();
      allow write: if true; // Allow write for anonymous analytics
    }

    // Waitlist collection
    match /waitlist/{entryId} {
      allow read: if isAdmin();
      allow create: if true;
      allow update, delete: if isAdmin();
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    match /businesses/{businessId}/{allPaths=**} {
      // Allow public read access
      allow read: if true;
      
      // Allow write access for business owners and admins
      allow write: if request.auth != null &&
        (
          // Business owner can write to their own storage
          request.auth.uid == businessId || 
          // Admin can write to any business storage
          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
        ) &&
        // Validate content type and size
        (
          request.resource.contentType.matches('image/.*') &&
          request.resource.size < 5 * 1024 * 1024
        );
        
      // Allow delete for business owners and admins
      allow delete: if request.auth != null &&
        (
          request.auth.uid == businessId ||
          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
        );
    }
  }
}